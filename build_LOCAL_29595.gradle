
plugins {
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '2.7.1'
    id 'org.springframework.boot' version '2.1.7.RELEASE'
}

repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

test{
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'org.springframework.boot:spring-boot-starter-web:2.1.6.RELEASE'
    compile 'org.springframework.boot:spring-boot-devtools:2.1.6.RELEASE'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.7.RELEASE'
    compile group: 'com.h2database', name: 'h2', version: '1.4.199'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.6.RELEASE'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-junit-jupiter:3.0.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectName", "Site Backend"
        property "sonar.projectKey", "Ajris_site_backend"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.ajris.site.SiteApplication'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

group = 'com.ajris'
version = '0.0.1-SNAPSHOT'
description = 'Site Backend'
sourceCompatibility = '12'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}